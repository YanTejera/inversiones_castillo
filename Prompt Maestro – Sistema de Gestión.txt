Prompt Maestro ‚Äì Sistema de Gesti√≥n de Ventas de Motocicletas
üéØ Objetivo
Desarrollar una aplicaci√≥n web de escritorio para un concesionario de motocicletas, enfocada en:

Gesti√≥n de ventas

Control de cobros

Facturaci√≥n

Estad√≠sticas y reportes

Control de stock en tiempo real

Seguridad con sistema de login y roles de usuario

Posteriormente, crear una versi√≥n m√≥vil enfocada en monitoreo.

üìå Fases del Proyecto
Fase 1 ‚Äì Definici√≥n y estructura base
Definir stack tecnol√≥gico (sugerencia: Frontend: React o Vue.js, Backend: Laravel o Django, DB: MySQL/PostgreSQL).

Crear estructura inicial de proyecto (frontend y backend conectados).

Configurar sistema de login y roles (administrador, vendedor, cobrador, etc.).

Preparar base de datos inicial:

Tabla de usuarios con roles y credenciales.

Tabla de motos con stock, precio de compra, precio de venta, ganancias, etc.

Tabla de clientes.

Tabla de ventas y pagos.

Tabla de reportes.

Fase 2 ‚Äì M√≥dulo de gesti√≥n de motos
CRUD completo de motos:

Crear, ver, editar, eliminar.

Campos: marca, modelo, a√±o, chasis, precio compra, precio venta, ganancia, cantidad stock, im√°genes.

Actualizaci√≥n de stock en tiempo real.

B√∫squeda y filtrado por chasis, marca o modelo.

Fase 3 ‚Äì M√≥dulo de clientes y ventas
Registro y edici√≥n de clientes.

Datos: nombre, direcci√≥n, c√©dula, tel√©fono, correo, fiador, referencias.

Registro de ventas:

Selecci√≥n de cliente.

Selecci√≥n de moto.

Tipo de venta: contado o financiado.

Monto inicial, cuotas, fecha de inicio, fecha de pago, estado.

Emisi√≥n de factura en PDF.

Control de documentos como en la imagen (efectos dejados, referencias, conductor, etc.).

Fase 4 ‚Äì M√≥dulo de pagos y cobros
Registro de pagos mensuales.

C√°lculo autom√°tico de saldo pendiente.

Historial de pagos.

Integraci√≥n de reportes de cobro por cliente, por fecha o por cobrador.

Botones r√°pidos: "Aplicar pagos regulares", "Abono a capital".

Fase 5 ‚Äì Panel administrativo y estad√≠sticas
Vista general con:

Ventas del d√≠a, semana, mes.

Cobros pendientes.

Stock cr√≠tico.

Rentabilidad.

Gr√°ficos estad√≠sticos.

Descarga de reportes en Excel y PDF.

Fase 6 ‚Äì Optimizaci√≥n y versi√≥n m√≥vil
Crear app Android (React Native o Flutter) para monitoreo:

Ver ventas, cobros y perfiles.

No incluir edici√≥n masiva (solo lectura).

Sincronizaci√≥n con la base de datos principal.

Fase 7 ‚Äì Seguridad y despliegue
Copias de seguridad autom√°ticas.

Control de acceso y logs de actividad.

Deploy en servidor seguro (ej: VPS o AWS).

Optimizaci√≥n de rendimiento.

Funciones claves copiadas de la imagen
Botones de acceso r√°pido en panel lateral.

Gesti√≥n de fiadores y documentos asociados.

Registro de datos detallados de veh√≠culo.

Seguimiento de cuotas y pagos con estado activo/inactivo.

Generaci√≥n autom√°tica de reportes y facturas.

Si quieres, el siguiente paso ser√≠a pasar a un diagrama de base de datos para que desde ya tengamos la estructura y luego empezamos la Fase 1 creando el proyecto base con login y roles.
¬øQuieres que preparemos primero ese diagrama de base de datos?








T√∫ dijiste:
Si crea el diagrama 


ChatGPT Plus
Perfecto ‚úÖ
Vamos a crear un diagrama de base de datos pensado para cubrir todas las funciones que mencionaste y tambi√©n las que vemos en la imagen que quieres replicar.

Te lo har√© en forma de modelo entidad-relaci√≥n (ERD) con sus tablas y relaciones.

üóÑ Diagrama de Base de Datos ‚Äì Sistema de Gesti√≥n de Motocicletas
1. Usuarios y Roles
usuarios

id_usuario (PK)

nombre

apellido

usuario (√∫nico)

contrase√±a (hash)

rol_id (FK ‚Üí roles.id_rol)

tel√©fono

email

estado (activo/inactivo)

fecha_creacion

roles

id_rol (PK)

nombre_rol (Administrador, Vendedor, Cobrador)

descripcion

2. Clientes y Fiadores
clientes

id_cliente (PK)

nombre

apellido

direccion

ciudad

pais

cedula

telefono

celular

email

estado_civil

fecha_registro

fiadores

id_fiador (PK)

nombre

apellido

cedula

direccion

telefono

cliente_id (FK ‚Üí clientes.id_cliente)

3. Inventario de Motos
motos

id_moto (PK)

marca

modelo

a√±o

chasis (√∫nico)

precio_compra

precio_venta

ganancia

cantidad_stock

descripcion

imagen_url

fecha_ingreso

4. Ventas y Detalles
ventas

id_venta (PK)

cliente_id (FK ‚Üí clientes.id_cliente)

usuario_id (FK ‚Üí usuarios.id_usuario)

fecha_venta

tipo_venta (contado, financiado)

monto_total

monto_inicial

cuotas

pago_mensual

estado (activa, cancelada, finalizada)

venta_detalle

id_detalle (PK)

venta_id (FK ‚Üí ventas.id_venta)

moto_id (FK ‚Üí motos.id_moto)

cantidad

precio_unitario

subtotal

5. Pagos y Cobros
pagos

id_pago (PK)

venta_id (FK ‚Üí ventas.id_venta)

fecha_pago

monto_pagado

tipo_pago (efectivo, transferencia, tarjeta)

observaciones

6. Documentos Asociados
documentos

id_documento (PK)

cliente_id (FK ‚Üí clientes.id_cliente)

tipo_documento (Efectos dejados, Referencias, Conductor del veh√≠culo)

descripcion

archivo_url

fecha_creacion

7. Reportes y Auditor√≠a
reportes

id_reporte (PK)

usuario_id (FK ‚Üí usuarios.id_usuario)

tipo_reporte (ventas, pagos, stock)

parametros

fecha_generacion

archivo_url

auditoria

id_auditoria (PK)

usuario_id (FK ‚Üí usuarios.id_usuario)

accion

tabla_afectada

id_registro

fecha_accion

üìå Relaciones clave:

Un cliente puede tener m√∫ltiples ventas.

Una venta puede tener m√∫ltiples motos (relaci√≥n ventas ‚Üî venta_detalle).

Una venta puede tener m√∫ltiples pagos.

Un cliente puede tener un fiador.

Los usuarios (empleados) est√°n vinculados a las ventas y reportes.

